name: devcontainer-docker-image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-devcontainer  # pymc-devs/pymc-devcontainer

jobs:
  build-container:
    runs-on: ubuntu-latest

    # Set permissions for GitHub token
    # <https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#authenticating-to-package-registries-on-github>
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout source
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3.0.0

    - name: Prepare metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,enable=true,prefix=git-
          type=raw,value=latest

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        context: .
        file: scripts/dev.Dockerfile
        platforms: linux/amd64  # ,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-to: type=inline
